---

- name: Get the current caller identity information
  amazon.aws.aws_caller_info:
  register: aws_info

- name: Create iam role for sdg login
  community.aws.iam_role:
    name: "{{ email_role }}"
    assume_role_policy_document: "{{ lookup('ansible.builtin.template','email_lambda_policy.json.j2') }}"
    description: "Policy for billing email lambda"
    managed_policies: []
- name: Apply policy to iam role
  community.aws.iam_policy:
    iam_type: role
    iam_name: "{{ email_role }}"
    policy_name: "{{ item.name }}"
    policy_json: "{{ lookup('ansible.builtin.template', item.json) }}"
  loop:
    - name: allowCostExplorerRead
      json: allow_cost_explorer_read.json.j2
    - name: allowSESSendEmail
      json: allow_ses_send_email.json.j2
    - name: AWSLambdaBasicExecutionRole
      json: aws_lambda_basic_execution_role.json.j2


# see https://docs.ansible.com/ansible/latest/collections/amazon/aws/lambda_module.html
- name: Deploy lambda
  community.aws.lambda:
    name: "{{ lambda_function_name }}"
    description: Function to email cost breakout data based on tags/service from Cost Explorer
    region: "{{ region }}"
    s3_bucket: "{{ s3_source.bucket }}"
    s3_key: "{{ s3_source.key }}"
    runtime: "python3.8"
    role: "arn:aws:iam::{{ aws_info.account }}:role/{{ email_role }}"
    handler: "generate_report.lambda_handler"
    memory_size: 128
    timeout: 5
    tags: "{{ tags }}"
    
#- name: Pause for 1 minute while Lambda is deployed
#  ansible.builtin.pause:
#    minutes: 1
#
#- name: Add Pandas layer
#  ansible.builtin.shell: |
#    aws lambda update-function-configuration \
#      --region {{ region }} \
#      --function-name "arn:aws:lambda:{{ region }}:{{ aws_info.account }}:function:{{ lambda_function_name }}" \
#      --layers "arn:aws:lambda:{{ region }}:{{ aws_info.account }}:layer:AWSSDKPandas-Python38:1"

# see https://docs.ansible.com/ansible/latest/collections/community/aws/cloudwatchevent_rule_module.html
- community.aws.cloudwatchevent_rule:
    name: "lambda_{{ lambda_function_name }}"
    region: "{{ region }}"
    schedule_expression: "{{ eventbridge_schedule }}"
    description: Run billing report Lambda on schedule
    targets:
      - id: MyTargetId
        arn: arn:aws:lambda:{{ region }}:{{ aws_info.account }}:function:{{ lambda_function_name }}
        input: "{{ trigger_inputs | to_json }}"

# see https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventsourcemapping.html
- name: Create EventBridge trigger
  ansible.builtin.shell: |
    aws lambda create-event-source-mapping \
      --region {{ region }} \
      --function-name "arn:aws:lambda:{{ region }}:{{ aws_info.account }}:function:{{ lambda_function_name }}" \
      --event-source-arn "arn:aws:events:{{ region }}:{{ aws_info.account }}:rule/lambda_{{ lambda_function_name }}"
