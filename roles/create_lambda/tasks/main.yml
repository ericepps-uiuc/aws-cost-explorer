---

- name: Get the current caller identity information
  amazon.aws.aws_caller_info:
  register: aws_info

- name: Create iam role for sdg login
  community.aws.iam_role:
    name: "{{ iam_role_name }}"
    assume_role_policy_document: "{{ lookup('ansible.builtin.template','email_lambda_policy.json.j2') }}"
    description: "Policy for billing email lambda"
    managed_policies: []
- name: Apply policy to iam role
  community.aws.iam_policy:
    iam_type: role
    iam_name: "{{ iam_role_name }}"
    policy_name: "{{ item.name }}"
    policy_json: "{{ lookup('ansible.builtin.template', item.json) }}"
  loop:
    - name: allowCostExplorerRead
      json: allow_cost_explorer_read.json.j2
    - name: allowSESSendEmail
      json: allow_ses_send_email.json.j2
    - name: AWSLambdaBasicExecutionRole
      json: aws_lambda_basic_execution_role.json.j2

# see https://docs.ansible.com/ansible/latest/collections/amazon/aws/lambda_module.html
- name: Create Lambda
  community.aws.lambda:
    name: "{{ lambda_function_name }}"
    description: Function to email cost breakout data based on tags/service from Cost Explorer
    region: "{{ region }}"
    role: "arn:aws:iam::{{ aws_info.account }}:role/{{ iam_role_name }}"
    s3_bucket: "{{ s3_source.bucket }}"
    s3_key: "{{ s3_source.key }}"
    runtime: "python3.8"
    handler: "{{ s3_source.function_name }}.lambda_handler"
    memory_size: 128
    timeout: 5
    tags: "{{ tags }}"
    
# see https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html?icmpid=docs_lambda_help
# see https://docs.aws.amazon.com/lambda/latest/dg/invocation-layers.html
#- name: Add Pandas layer
#  ansible.builtin.shell: |
#    aws lambda update-function-configuration \
#      --function-name "arn:aws:lambda:{{ region }}:{{ aws_info.account }}:function:{{ lambda_function_name }}" \
#      --layers "arn:aws:lambda:{{ region }}:{{ aws_info.account }}:layer:AWSSDKPandas-Python38:1"
# ****** AWS-provided layers don't seem to be available even by command line, so need to package the whole thing up, I guess ********


# see https://docs.ansible.com/ansible/latest/collections/community/aws/cloudwatchevent_rule_module.html
- name: Create EventBridge event rule
  community.aws.cloudwatchevent_rule:
    name: "{{ eventbridge_rule_name }}"
    region: "{{ region }}"
    schedule_expression: "{{ eventbridge_schedule }}"
    description: Run billing report Lambda on schedule
    targets:
      - id: "target_{{ eventbridge_rule_name }}"
        arn: "arn:aws:lambda:{{ region }}:{{ aws_info.account }}:function:{{ lambda_function_name }}"
        input: "{{ trigger_inputs | to_json }}"

# see https://docs.amazonaws.cn/en_us/AmazonCloudWatch/latest/events/RunLambdaSchedule.html
# see https://docs.aws.amazon.com/cli/latest/reference/lambda/add-permission.html
- name: Grant permission to EventBridge trigger
  ansible.builtin.shell: |
    aws lambda add-permission \
      --region {{ region }} \
      --function-name "arn:aws:lambda:{{ region }}:{{ aws_info.account }}:function:{{ lambda_function_name }}" \
      --source-arn "arn:aws:events:{{ region }}:{{ aws_info.account }}:rule/{{ eventbridge_rule_name }}" \
      --statement-id "schedule_{{ eventbridge_rule_name }}" \
      --action 'lambda:InvokeFunction' \
      --principal events.amazonaws.com
